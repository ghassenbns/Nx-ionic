import {
  ActionEnum,
  ModeEnum,
  MultiActionEnum,
  Strategy,
} from '@concordia-nx-ionic/concordia-shared';

export const vehiclesDataConfig: Strategy = {
  name: 'vehicles',
  entity: 'vehicle',
  columns: [
    {
      field: 'name',
      contentType: 'string',
      rowSelector: 'name',
      required: true,
      searchType: 'text',
      filterType: 'string',
      options: [],
      link: {
        field: '_id',
        pref: '/vehicles',
        sfx: '',
      },
    },
    {
      field: 'description',
      contentType: 'string',
      rowSelector: 'description',
      required: true,
      searchType: 'text',
      filterType: 'string',
      options: [],
    },
    {
      field: 'fleet',
      contentType: 'string',
      rowSelector: 'fleetDetails.name',
      rowEditSelector: 'fleetId',
      required: true,
      searchType: 'multiSelectSearch',
      searchSelector: 'fleetId',
      editType: 'selectSearch',
      filterType: 'object-id',
      options: [],
    },
    {
      field: 'registrationNumber',
      contentType: 'string',
      required: true,
      rowSelector: 'registrationNumber',
      searchType: 'text',
      filterType: 'string',
      options: [],
    },
    {
      field: 'active',
      contentType: 'boolean',
      rowSelector: 'isActive',
      required: true,
      searchType: 'select',
      filterType: 'boolean',
      defaultValue: true,
      options: [
        { name: 'active', _id: true },
        { name: 'inactive', _id: false },
      ],
      optionsTranslate: true,
    },
    {
      field: 'type',
      contentType: 'enum',
      rowSelector: 'vehicleTypeDetails.label',
      rowEditSelector: 'vehicleTypeId',
      editType: 'select',
      searchType: 'select',
      searchSelector: 'vehicleTypeId',
      filterType: 'int',
      required: true,
      defaultValue: 1,
      options: [],
      optionsField: 'label',
      optionsValue: 'vehicleTypeId',
    },
    {
      field: 'fuelType',
      rowSelector: 'vehicleFuelTypeDetails.label',
      rowEditSelector: 'vehicleFuelTypeId',
      contentType: 'enum',
      editType: 'select',
      searchType: 'select',
      searchSelector: 'vehicleFuelTypeId',
      filterType: 'int',
      required: true,
      defaultValue: 1,
      options: [],
      optionsValue: 'vehicleFuelTypeId',
      optionsField: 'label',
    },
    {
      field: 'fuelTankCapacity',
      addLabel: 'fuelTankCapacity.unit.htmlSymbol',
      id: 1,
      required: true,
      contentType: 'number',
      min: 0,
      rowSelector: 'fuelTankCapacity.value',
      rowEditSelector: 'fuelTankCapacity.value',
      searchType: 'text',
      filterType: 'string',
      hidden: [ ModeEnum.LIST_VIEW, ModeEnum.LIST_EDIT, ModeEnum.SINGLE_CREATE, ModeEnum.SINGLE_EDIT],
      options: [],
    },
    {
      field: 'gasTankCapacity',
      addLabel: 'gasTankCapacity.unit.htmlSymbol',
      id: 2,
      required: true,
      contentType: 'number',
      min: 0,
      rowSelector: 'gasTankCapacity.value',
      searchType: 'text',
      filterType: 'string',
      hidden: [ ModeEnum.LIST_VIEW, ModeEnum.LIST_EDIT, ModeEnum.SINGLE_CREATE, ModeEnum.SINGLE_EDIT],
      options: [],
    },
    {
      field: 'batteryCapacity',
      addLabel: 'batteryCapacity.unit.htmlSymbol',
      id: 3,
      required: true,
      contentType: 'number',
      min: 0,
      rowSelector: 'batteryCapacity.value',
      searchType: 'text',
      filterType: 'string',
      hidden: [ ModeEnum.LIST_VIEW, ModeEnum.LIST_EDIT, ModeEnum.SINGLE_CREATE, ModeEnum.SINGLE_EDIT],
      options: [],
    },
  ],
  actions: [
    { type: ActionEnum.INFO },
    { type: ActionEnum.EDIT },
    { type: ActionEnum.DELETE },
  ],
  multiActions: [
    {
      icon: 'checkmark-circle-outline',
      name: 'activate',
      type: MultiActionEnum.ACTIVATE,
    },
    {
      icon: 'close-circle-outline',
      name: 'deactivate',
      type: MultiActionEnum.DEACTIVATE,
    },
    {
      icon: 'pencil-outline',
      name: 'edit',
      type: MultiActionEnum.EDIT,
    },
    {
      icon: 'trash-outline',
      name: 'delete',
      type: MultiActionEnum.DELETE,
    },
  ],
  editActions: [
    { type: ActionEnum.CANCEL },
    { type: ActionEnum.DUPLICATE },
    { type: ActionEnum.DELETE },
  ],
};
