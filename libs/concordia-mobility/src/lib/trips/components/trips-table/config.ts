import { ActionEnum, ButtonEnum, ModeEnum, MultiActionEnum, Strategy } from '@concordia-nx-ionic/concordia-shared';

export const tripsDataConfig: Strategy = {
  name: 'trips',
  entity: 'trip',
  column: 2,
  columns: [
    {
      field: 'name',
      frozen: true,
      contentType: 'string',
      rowSelector: 'name',
      required: true,
      searchType: 'text',
      filterType: 'string',
      disabled: false,
      options: [],
      link: {
        field: '_id',
        pref: '/trips',
        sfx: '',
      },
    },
    {
      field: 'description',
      contentType: 'string',
      rowSelector: 'description',
      required: true,
      searchType: 'text',
      filterType: 'string',
      disabled: false,
      options: [],
    },
    {
      field: 'fleet',
      contentType: 'string',
      rowSelector: 'fleetDetails.name',
      rowEditSelector: 'fleetId',
      required: true,
      searchType: 'multiSelectSearch',
      searchSelector: 'fleetId',
      editType: 'selectSearch',
      filterType: 'object-id',
      options: [],
    },
    {
      field: 'status',
      contentType: 'enum',
      rowSelector: 'tripStatusDetails.label',
      rowEditSelector: 'tripStatusId',
      required: true,
      searchType: 'select',
      searchSelector: 'tripStatusId',
      filterType: 'int',
      defaultValue: 1,
      options: [],
      optionsField: 'label',
      optionsValue: 'tripStatusId',
    },
    {
      field: 'plannedStartDate',
      contentType: 'date',
      rowSelector: 'plannedStartDate',
      rowEditSelector: 'plannedStartDate',
      required: true,
      hideSeconds: false,
      searchType: 'date',
      editType: 'date',
      minDateOffset: 0,
      dateOffset: 0,
      filterType: 'string',
      filterRange: true,
      options: [],
    },
    {
      field: 'plannedEndDate',
      contentType: 'date',
      rowSelector: 'plannedEndDate',
      rowEditSelector: 'plannedEndDate',
      required: true,
      hideSeconds: false,
      searchType: 'date',
      editType: 'date',
      minDateOffset: 0,
      dateOffset: 1,
      filterType: 'string',
      filterRange: true,
      options: [],
    },
    {
      field: 'actualStartDate',
      contentType: 'date',
      rowSelector: 'actualStartDate',
      searchType: 'date',
      editType: 'date',
      filterType: 'string',
      filterRange: true,
      options: [],
      hidden: [ ModeEnum.SINGLE_CREATE, ModeEnum.SINGLE_EDIT ],
    },
    {
      field: 'actualEndDate',
      contentType: 'date',
      rowSelector: 'actualEndDate',
      searchType: 'date',
      editType: 'date',
      filterType: 'string',
      filterRange: true,
      options: [],
      hidden: [ ModeEnum.SINGLE_CREATE, ModeEnum.SINGLE_EDIT ],
    },
    {
      field: 'vehicle',
      contentType: 'string',
      rowSelector: 'vehicleDetails.name',
      rowEditSelector: 'vehicleId',
      required: false,
      searchType: 'text',
      editType: 'selectSearch',
      filterType: 'string',
      optionsFilter: ['fleetId'],
      options: [],
    },
    {
      field: 'vehicleRegistrationNumber',
      contentType: 'string',
      rowSelector: 'vehicleDetails.registrationNumber',
      searchType: 'text',
      editType: 'text',
      filterType: 'string',
      options: [],
      hidden: [ ModeEnum.SINGLE_CREATE, ModeEnum.SINGLE_EDIT ],
    },
    {
      field: 'driver',
      contentType: 'string',
      rowSelector: 'driverDetails.name',
      rowEditSelector: 'driverId',
      required: false,
      searchType: 'text',
      editType: 'selectSearch',
      filterType: 'string',
      optionsFilter: ['fleetId'],
      options: [],
    },
  ],
  actions: [
    { type: ActionEnum.INFO },
    { type: ActionEnum.EDIT },
    { type: ActionEnum.DELETE },
    { type: ActionEnum.DUPLICATE },
    {
      type: ActionEnum.ANALYSIS,
      actionType: ButtonEnum.LINK,
      link: {
        pref: '/trips/analysis',
        field: '_id',
        sfx: '',
      },
    },
  ],
  multiActions: [
    {
      icon: 'trash-outline',
      name: 'delete',
      type: MultiActionEnum.DELETE,
    },
    {
      icon: 'pencil-outline',
      name: 'setStatusAccepted',
      type: MultiActionEnum.SET_STATUS_ACCEPTED,
    },
    {
      icon: 'pencil-outline',
      name: 'setStatusProgress',
      type: MultiActionEnum.SET_STATUS_PROGRESS,
    },
    {
      icon: 'pencil-outline',
      name: 'setStatusCompleted',
      type: MultiActionEnum.SET_STATUS_COMPLETED,
    },
  ],
  editActions: [
    { type: ActionEnum.CANCEL },
    { type: ActionEnum.DUPLICATE },
    { type: ActionEnum.DELETE },
  ],
};
